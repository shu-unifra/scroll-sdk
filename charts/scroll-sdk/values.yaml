---
l1-devnet:
  enabled: true
  ingress:
    main:
      enabled: true
      hosts:
        - host: l1-devnet.scrollsdk
          paths:
            - path: /
              pathType: Prefix

blockscout:
  enabled: true
  blockscout-stack:
    frontend:
      replicaCount: 1

bridge-history-api:
  enabled: true
  ingress:
    main:
      enabled: true
      primary: true
      annotations: {}
      labels: {}
      ingressClassName: "nginx"
      hosts:
        - host: bridge-history-api.scrollsdk
          paths:
            - path: /
              pathType: Prefix

bridge-history-fetcher:
  enabled: true

balance-checker:
  enabled: true

chain-monitor:
  enabled: true

contracts:
  enabled: true

coordinator-api:
  enabled: false

coordinator-cron:
  enabled: false

frontends:
  enabled: true
  ingress:
    main:
      enabled: true
      hosts:
        - host: frontends.scrollsdk
          paths:
            - path: /
              pathType: Prefix

gas-oracle:
  enabled: true

rollup-explorer-backend:
  enabled: true
  ingress:
    main:
      enabled: true
      primary: true
      annotations: {}
      labels: {}
      ingressClassName: "nginx"
      hosts:
        - host: rollup-explorer-backend.scrollsdk
          paths:
            - path: /
              pathType: Prefix

rollup-node:
  enabled: true

l1-explorer:
  enabled: false
  ingress:
    main:
      enabled: true
      ingressClassName: "nginx"
      hosts:
        - host: l1-explorer.scrollsdk
          paths:
            - path: /
              pathType: Prefix

l2-sequencer:
  enabled: true

l2-rpc:
  enabled: true
  ingress:
    main:
      enabled: true
      ingressClassName: "nginx"
      hosts:
        - host: l2-rpc.scrollsdk
          paths:
            - path: /
              pathType: Prefix

l2-bootnode:
  enabled: true

blockscout-sc-verifier:
  enabled: true

rpc-gateway:
  enabled: false
  ingress:
    main:
      enabled: true
      ingressClassName: "nginx"
      hosts:
        - host: l2-rpc-gateway.scrollsdk
          paths:
            - path: /
              pathType: Prefix

scroll-common:
  enabled: true

scroll-monitor:
  enabled: true
  grafana:
    enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - grafana.scrollsdk
  loki:
    enabled: false
  promtail:
    enabled: true
  kube-prometheus-stack:
    enabled: true
    alertmanager:
      enabled: false

admin-system-backend:
  enabled: true

admin-system-cron:
  enabled: true

admin-system-dashboard:
  enabled: true
  ingress:
    main:
      enabled: true
      hosts:
        - host: admin-system-dashboard.scrollsdk
          paths:
            - path: /
              pathType: Prefix

postgresql:
  enabled: true
  nameOverride: postgresql
  fullnameOverride: postgresql
  auth:
    enablePostgresUser: true
    postgresPassword: "qwerty12345"
  volumePermissions:
    enabled: true
  primary:
    persistentVolumeClaimRetentionPolicy:
      enabled: true
      whenDeleted: Delete
      whenScaled: Delete
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false
    resources:
      requests:
        cpu: 1
        memory: 512Mi
      limits:
        cpu: 3
        memory: 1024Mi
    extendedConfiguration: |
      max_connections = 400
  tls:
    enabled: true
    autoGenerated: true

# -- Database connection information. These will be used by init containers to create database, users and roles for
# -- each services. A user with admin privilege is required.
db:
  pg_host: "postgresql"
  pg_user: "postgres"
  pg_password: "qwerty12345"
  pg_port: "5432"
  bridge_history_password: "test1234"
  chain_monitor_password: "test1234"
  gas_oracle_password: "test1234"
  rollup_node_password: "test1234"
  rpc_gateway_password: "test1234"
