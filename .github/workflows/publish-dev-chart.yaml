name: Lint, test and publish dev charts

on:
  push:
    paths:
      - 'charts/**'

env:
  HELM_REGISTRY: ghcr.io/shu-unifra/scroll-sdk/helm/dev

jobs:
  helm-chart-testing-not-scroll-sdk:
    name: chart-testing-without-scroll-sdk
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0

      - name: Helm registry login
        run: |
          helm registry login ghcr.io/shu-unifra/helm/scroll-sdk --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
        env:
          HELM_GITHUB_PASSWORD: "${{ secrets.HELM_GITHUB_PASSWORD }}"

      #  List chart change except scroll-sdk
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --excluded-charts scroll-sdk --target-branch ${{ github.event.repository.default_branch }} )
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --config ct.yaml --excluded-charts scroll-sdk --target-branch ${{ github.event.repository.default_branch }}

  publish-ghcr-not-scroll-sdk:
    name: publish-to-github-without-scroll-sdk
    runs-on: ubuntu-latest
    needs:
      - helm-chart-testing-not-scroll-sdk
    outputs:
      charts: ${{ steps.list-changed.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.event.repository.default_branch }}
          list-files: shell
          filters: |
            addedOrModified:
              - added|modified: 'charts/**'

      - name: Helm registry login
        run: |
          helm registry login ghcr.io/shu-unifra/helm/scroll-sdk --username ${{ github.actor }} --password ${{ secrets.HELM_GITHUB_PASSWORD }}
        env:
          HELM_GITHUB_PASSWORD: "${{ secrets.HELM_GITHUB_PASSWORD }}"

        # We filter here the scroll-sdk chart
      - name: Push chart to ghcr
        if: steps.filter.outputs.addedOrModified == 'true'
        env:
          HELM_EXPERIMENTAL_OCI: 1
        run: |
          set -x
          CHARTS=()
          PATHS=(${{ steps.filter.outputs.addedOrModified_files }})
          echo ${PATHS}
          # Get only the chart paths
          for i in "${PATHS[@]}"
          do
            chart=$(echo $i | awk -F "/" '{print $2}')
            if [ "$chart" != "scroll-sdk" ]; then
            CHARTS+=($chart)
            fi
          done
          # Remove duplicates
          CHARTS=( `for i in ${CHARTS[@]}; do echo $i; done | sort -u` )
          echo "CHARTS: ${CHARTS[@]}"
          for chart in ${CHARTS[@]}; do
            helm dependencies build charts/$chart
            helm package charts/$chart
            export CHART_VERSION=$(grep 'version:' charts/$chart/Chart.yaml | head -n1 | awk '{ print $2 }')
            helm push $chart-${CHART_VERSION}.tgz oci://${HELM_REGISTRY}
          done

  helm-chart-testing-scroll-sdk:
    name: chart-testing-scroll-sdk
    runs-on: ubuntu-latest
    needs:
      - publish-ghcr-not-scroll-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0

      - name: Setup scroll-sdk values
        run: cd charts/scroll-sdk && docker run --rm -t -v .:/contracts/volume scrolltech/scroll-stack-contracts:gen-configs-50c2661f6d3a40c34cc5b4fffbd0d7ba59d3dbae

      - name: Helm registry login
        run: |
          helm registry login ghcr.io/shu-unifra/helm/scroll-sdk --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
        env:
          HELM_GITHUB_PASSWORD: "${{ secrets.HELM_GITHUB_PASSWORD }}"

      #  List scroll-sdk chart if it has changed
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --chart-dirs charts/scroll-sdk --target-branch ${{ github.event.repository.default_branch }} )
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --config ct.yaml --charts scroll-sdk --target-branch ${{ github.event.repository.default_branch }}

  publish-ghcr-scroll-sdk:
    name: publish-scroll-sdk-to-github
    runs-on: ubuntu-latest
    needs:
      - helm-chart-testing-scroll-sdk
    outputs:
      charts: ${{ steps.list-changed.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.event.repository.default_branch }}
          list-files: shell
          filters: |
            addedOrModified:
              - added|modified: 'charts/scroll-sdk/**'

      - name: Helm registry login
        run: |
          helm registry login ghcr.io/shu-unifra/helm/scroll-sdk --username ${{ github.actor }} --password ${{ secrets.HELM_GITHUB_PASSWORD }}
        env:
          HELM_GITHUB_PASSWORD: "${{ secrets.HELM_GITHUB_PASSWORD }}"

      - name: Replace helm registry by helm/dev
        run: |
          sed -i 's|oci://ghcr.io/scroll-tech/scroll-sdk/helm|oci://ghcr.io/scroll-tech/scroll-sdk/helm/dev|g' charts/scroll-sdk/Chart.yaml

      #TODO delete this when merge to scroll
      - name: Replace helm registry by helm/dev
        run: |
          sed -i 's|oci://ghcr.io/scroll-tech/scroll-sdk/helm/dev|oci://ghcr.io/shu-unifra/scroll-sdk/helm/dev|g' charts/scroll-sdk/Chart.yaml

      - name: Push chart to ghcr
        if: steps.filter.outputs.addedOrModified == 'true'
        env:
          HELM_EXPERIMENTAL_OCI: 1
        run: |
          set -x
          CHARTS=()
          PATHS=(${{ steps.filter.outputs.addedOrModified_files }})
          echo ${PATHS}
          # Get only the chart paths
          for i in "${PATHS[@]}"
          do
            CHARTS+=($(echo $i | awk -F "/" '{print $2}'))
          done
          # Remove duplicates
          CHARTS=( `for i in ${CHARTS[@]}; do echo $i; done | sort -u` )
          echo "CHARTS: ${CHARTS[@]}"
          for chart in ${CHARTS[@]}; do
            helm dependencies build charts/$chart
            helm package charts/$chart
            export CHART_VERSION=$(grep 'version:' charts/$chart/Chart.yaml | head -n1 | awk '{ print $2 }')
            helm push $chart-${CHART_VERSION}.tgz oci://${HELM_REGISTRY}
          done

  kubeconform:
    name: kubeconform-check
    runs-on: ubuntu-latest
    needs:
    - publish-ghcr-scroll-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.event.repository.default_branch }}
          list-files: shell
          filters: |
            addedOrModified:
              - added|modified: 'charts/scroll-sdk/**'

      - name: Helm registry login
        run: |
          helm registry login ghcr.io/shu-unifra/helm/scroll-sdk --username ${{ github.actor }} --password ${{ secrets.HELM_GITHUB_PASSWORD }}
        env:
          HELM_GITHUB_PASSWORD: "${{ secrets.HELM_GITHUB_PASSWORD }}"

      - name: Replace helm registry by helm/dev
        run: |
          find charts/ -type f -exec sed -i 's|oci://ghcr.io/scroll-tech/scroll-sdk/helm|oci://ghcr.io/scroll-tech/scroll-sdk/helm/dev|g' {} +

      #TODO delete this when merge to scroll
      - name: Replace helm registry by helm/dev
        run: |
          find charts/ -type f -exec sed -i 's|oci://ghcr.io/scroll-tech/scroll-sdk/helm/dev|oci://ghcr.io/shu-unifra/scroll-sdk/helm/dev|g' {} +

      - name: Install Kubeconform
        run: |
          set -e
          wget https://github.com/yannh/kubeconform/releases/download/v0.6.4/kubeconform-linux-amd64.tar.gz
          tar xf kubeconform-linux-amd64.tar.gz
          sudo mv kubeconform /usr/local/bin/

      - name: Add Helm repositories
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add blockscout https://blockscout.github.io/helm-charts 
          helm repo update

      - name: Validate rendered templates
        run: |
          set -e
          failed_charts=()
          for chart in charts/*; do
            if [ -d "$chart" ]; then
              echo "Processing chart $chart"
              if [[ $(basename $chart) == "common" ]] || [[ $(basename $chart) == "external-secrets-lib" ]]; then
                echo "Skipping library chart: $chart"
                continue
              fi

              if ! helm dependency update $chart; then
                failed_charts+=("$chart - dependency update failed")
                continue
              fi

              if ! helm dependency build $chart; then
                failed_charts+=("$chart - dependency build failed")
                continue
              fi

              if ! helm template $(basename $chart) $chart | kubeconform \
                -summary \
                -output json \
                -schema-location default \
                -schema-location https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/jsonnet/prometheus-operator/servicemonitors-crd.json \
                -schema-location https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/jsonnet/prometheus-operator/alertmanagers-crd.json \
                -schema-location https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/jsonnet/prometheus-operator/prometheusrules-crd.json \
                -schema-location https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/jsonnet/prometheus-operator/prometheuses-crd.json \
                -schema-location https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/jsonnet/prometheus-operator/podmonitors-crd.json \
                -strict \
                -; then
                failed_charts+=("$chart - validation failed")
              fi
            fi
          done
          
          if [ ${#failed_charts[@]} -ne 0 ]; then
            echo "faild charts are:"
            printf '%s\n' "${failed_charts[@]}"
            exit 1
          fi

  run-k8s-test:
    name: check-services-up-and-running
    runs-on: ubuntu-latest
    needs: 
      - kubeconform
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.event.repository.default_branch }}
          list-files: shell
          filters: |
            addedOrModified:
              - added|modified: 'charts/scroll-sdk/**'

      - name: Helm registry login
        run: |
          helm registry login ghcr.io/scroll-tech/helm/scroll-sdk --username ${{ github.actor }} --password ${{ secrets.HELM_GITHUB_PASSWORD }}
        env:
          HELM_GITHUB_PASSWORD: "${{ secrets.HELM_GITHUB_PASSWORD }}"

      - name: Replace helm registry by helm/dev
        run: |
          find charts/ -type f -exec sed -i 's|oci://ghcr.io/scroll-tech/scroll-sdk/helm|oci://ghcr.io/scroll-tech/scroll-sdk/helm/dev|g' {} +

      #TODO delete this when merge to scroll
      - name: Replace helm registry by shu
        run: |
          find charts/ -type f -exec sed -i 's|oci://ghcr.io/scroll-tech/scroll-sdk/helm/dev|oci://ghcr.io/shu-unifra/scroll-sdk/helm/dev|g' {} +

      - name: Create Kind Cluster
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: chart-testing

      - name: Install Chart Testing Tool
        uses: helm/chart-testing-action@v2.6.1

      - name: Run devnet
        run: |
          cd devnet
          make bootstrap && make install

      - name: Check Service Status
        run: |
          echo "Waiting for all pods to be ready..."

          kubectl wait --for=condition=Ready pods --all --timeout=600s --namespace=default

          for ns in $(kubectl get ns -o name); do
            echo "Checking pods in ${ns}..."
            if ! kubectl wait --for=condition=Ready pods --all --timeout=300s -n ${ns#namespace/}; then
              echo "Pods in ${ns} failed to become ready"
              kubectl describe pods -n ${ns#namespace/}
              exit 1
            fi
          done

          if [ $(kubectl get pods --all-namespaces -o json | jq '.items[] | select(.status.phase != "Running" and .status.phase != "Completed") | .metadata.name' | wc -l) -gt 0 ]; then
            echo "Found pods not in Running/Completed state:"
            kubectl get pods --all-namespaces -o wide | grep -v Running | grep -v Completed
            kubectl describe pods --all-namespaces | grep -A 10 "Events:"
            exit 1
          fi
